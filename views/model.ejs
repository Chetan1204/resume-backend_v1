<div style="width: 100%;height: 100%; display: flex;align-items: start;justify-content: start;">
	<div style="width: 50%;height: 100%;padding: 20px;overflow-y: scroll;border-right: 1px solid rgba(0, 0, 0, 0.25);">
		<div>
			<h3><%= modelData?.modelName %></h3>
			<p>Edit model this model accross the website.</p>
		</div>
		
		<div style="display: flex; align-items: center; justify-content: space-between; width: 100%;border-bottom: 1px solid rgba(0, 0, 0, 0.25);margin-bottom: 10px;">
			<p style="margin: 0;font-size: 13px; font-weight: 600;">FIELDS:</p>
		</div>
		<div id="inputs-container" style="width: 100%;">
			<input type="hidden" name="modelName" value="<%= modelData?.modelName %>">
			<% if(modelData?.dataObject && Object.keys(modelData?.dataObject)?.length > 0) { Object.keys(modelData?.dataObject).forEach(item => { %>
				<div class="input-group mb-3">
					<span style="color:#484848;background-color: #f5f5f5;font-weight: 500;border-radius: 0px;font-size: 13px;border:1px solid rgba(0, 0, 0, 0.25)" class="button-secondary">Key Name</span>
					<input type="text" class="form-control" placeholder="Enter a key" name="<%= item %>" value="<%= item %>" aria-label="Enter a key" required style="font-size: 13px;">
					<span style="color:#484848;background-color: #f5f5f5;font-weight: 500;border-radius: 0px;font-size: 13px;border:1px solid rgba(0, 0, 0, 0.25)" class="button-secondary">Data Type</span>
					<select onchange="handleRepeater(this)" class="form-select" aria-label="Default select example" name="<%= item %>" style="font-size: 13px;">
						<option <%= modelData?.dataObject[item] == "String" && "selected" %> value="String">String</option>
						<option <%= modelData?.dataObject[item] == "Boolean" && "selected" %> value="Boolean">Boolean</option>
						<option <%= modelData?.dataObject[item] == "Number" && "selected" %> value="Number">Number</option>
						<option <%= modelData?.dataObject[item] == "Image" && "selected" %> value="Image">Image</option>
						<option <%= modelData?.dataObject[item] == "Multiple Images" && "selected" %> value="Multiple Images">Multiple Images</option>
						<option <%= modelData?.dataObject[item] == "Mixed" && "selected" %> value="Mixed">Mixed</option>
						<option <%= modelData?.dataObject[item] == "Array" && "selected" %> value="Array">Array</option>
						<option <%= modelData?.dataObject[item].value == "Repeater" && "selected" %> value="<%= JSON.stringify(modelData?.dataObject[item]) %>">Repeater</option>
					</select>
					<button style="display:<%= modelData?.dataObject[item].value == 'Repeater' ?  'inline-block':'none' %>;" onclick="openSubDocModal(this)" class="btn button-secondary" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Link a custom field"><i class="fa-solid fa-link"></i></button>
				</div>
			<% }); } else { %>
				<div id="empty-model-wr" style="display: flex;align-items: center;justify-content: center;gap: 20px;">
					<figure style="width: 100px;margin: 0;">
						<img src="/images/empty-box-svgrepo-com.svg" width="100" alt="No content">
					</figure>
					<p style="margin: 0;font-size: 14px;font-weight: 600;color: #484848;">Start defining your model, by adding fields</p>
				</div>
			<% } %>
		</div>
	</div>
	<div style="width: 50%;padding: 20px; display: flex;flex-direction: column;gap: 15px;">
		<div style="background-color: #fff;border-radius: 8px; padding: 10px; width: 100%;border: 1px solid rgba(0,0,0,0.25);display: flex;flex-direction: column;gap: 5px;">
			<h5 style="font-weight: 600; font-size: 13px; text-transform: uppercase;margin-bottom: 15px; border-bottom: 1px solid rgba(0,0,0,0.25);padding-bottom: 5px;">Publish</h5>
			<button class="button-main button-main-md" onclick="handlesubmit()">Update Model</button>
		</div>
		<div style="background-color: #fff;border-radius: 8px; padding: 10px; width: 100%;border: 1px solid rgba(0,0,0,0.25);display: flex;flex-direction: column;gap: 5px;">
			<h5 style="font-weight: 600; font-size: 13px; text-transform: uppercase;margin-bottom: 15px; border-bottom: 1px solid rgba(0,0,0,0.25);padding-bottom: 5px;">Edit Fields</h5>
			<button class="button-secondary" type="button" onclick="addfield();">Add new field</button>
		</div>


		<div style="display: flex; flex-direction: column; align-items: start; justify-content: start; width: 100%;padding: 10px;margin-bottom: 10px;background-color: #fff;border: 1px solid rgba(0, 0, 0, 0.25);border-radius: 6px;">
			<h5 style="width: 100%;font-weight: 600; font-size: 13px; text-transform: uppercase;margin-bottom: 15px; border-bottom: 1px solid rgba(0,0,0,0.25);padding-bottom: 5px;">Link Post-types</h5>
			<p style="font-size: 13px;margin-bottom: 5px;">Link this custom field to a post type</p>
			<select name="postTypeSelector" id="post-type-selector" onchange="handlePostTypeConfirmation()" style="width: 100%;padding: 5px 10px; background-color: aliceblue;margin-bottom: 5px;font-size: 12px;" >
				<option value="">Choose a post type</option>
				<% allPostTypes.forEach( item => { %>
				<option value="<%= item._id %>--<%= item.postTypeName %>"><%= item.postTypeName %></option>
				<% }) %>
			</select>
			<div id="post-type-link-confirmation" style="margin-top: 5px;display: none;align-items: center;justify-content: space-between;gap: 10px;background-color: aliceblue;border-bottom: 1px solid rgba(0, 0, 0, 0.25);width: 100%;padding: 4px;">
				<p id="post-type-confirm-name" style="margin: 0;font-weight: 600;font-size: 13px;"></p>
				<form action="/api/v1/manage/link-post-type-to-model" method="POST">
					<input type="hidden" name="linkPostTypeName" id="linkPostTypeName">
					<input type="hidden" name="linkPostTypeId" id="linkPostTypeId">
					<input type="hidden" name="linkModelId" id="linkModelId" value="<%= modelData?._id %>">
					<button type="submit" style="font-size: 13px; background-color: #484848;color: #fff;font-weight: 600;border-radius: 5px;">Link Post-Type</button>
				</form>
			</div>
			<p style="font-size: 13px;margin-bottom: 10px;margin-top: 15px;">Currently linked post-types:</p>
			<table width="100%" cellspacing="0" cellpadding="0" style="font-size: 12px;">
				<tr style="border-bottom: 1px solid rgba(0, 0, 0, 0.25);">
					<td style="text-transform: uppercase;font-weight: 600;">Post-Type</td>
					<td style="text-transform: uppercase;font-weight: 600;">Slug</td>
					<td style="text-transform: uppercase;font-weight: 600;">Post Count</td>
					<td style="text-transform: uppercase;font-weight: 600;">Actions</td>
				</tr>
				<% if(linkedPostTypes?.length > 0) { linkedPostTypes.forEach(item => { %>
				<tr style="background-color: #f1f1f1;border-bottom: 1px solid rgba(0, 0, 0, 0.25);">
					<td style="padding-top: 5px;padding: 5px;">
						<%= item.postTypeName %>
					</td>
					<td style="padding-top: 5px;">
						<%= item.postTypeSlug %>
					</td>
					<td style="padding-top: 5px;">
						<%= item.postCount %>
					</td>
					<td style="padding-top: 5px;">
						<div style="display: flex;align-items: center;gap: 10px;">
							<i onclick="unlinkPostType('<%= item.postTypeName %>','<%= item._id %>')" style="cursor: pointer;" class="fa-solid fa-link-slash"></i>
							<i style="cursor: pointer;" class="fa-solid fa-eye"></i>
						</div>
					</td>
				</tr>
				<% })} else { %>
					<td colspan="4">
						<div style="width: 100%; text-align: center;padding: 5px 0px;">
							No Post-Types are linked to this model yet.
						</div>
					</td>
				<% } %>
			</table>
		</div>
		<div id="repeater-customize" style="background-color: #fff;border-radius: 8px; padding: 10px; width: 100%;border: 1px solid rgba(0,0,0,0.25);display: none;flex-direction: column;gap: 5px;">
			<h5 style="font-weight: 600; font-size: 13px; text-transform: uppercase;margin-bottom: 15px; border-bottom: 1px solid rgba(0,0,0,0.25);padding-bottom: 5px;">Customize Repeater</h5>
			<button class="button-secondary" type="button">Add new field</button>
		</div>
		<div id="subDocModal" class="modal">
			<div class="modal-content">
				<span class="close" onclick="closeSubDocModal()">&times;</span>
				<div style="padding: 20px 0;">
					<label for="currentlyLinkedRepeater"></label>
					<input type="hidden" id="fieldName" name="fieldName">
					<input type="hidden" id="modelId" name="modelId" value="<%= modelData?._id %>">
					<label class="pb-2" for="buttonTitle">Choose Custom Field:</label>
					<select id="linkingModelId" class="form-select" aria-label="Default select example" style="font-size: 13px;">
						<% if(allModels?.length > 0) { allModels?.forEach(item => { %>
							<option value="<%= item?._id %>"><%= item?.modelName %></option>
						<% })} %>
					</select>
					<button class="mt-3 button-main button-main-md" onclick="linkSubDocument()">Add / Update</button>
				</div>
			</div>
		</div>
	</div>
	<script>
		window.addEventListener("DOMContentLoaded", ()=>{
			const container = document.getElementById("inputs-container");
			const children = container.querySelectorAll(".input-group");
			if(chidren?.length == 0){
				addfield();
				addfield();
			}
			const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
			const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));
		})

		function openSubDocModal(buttonElement) {
			document.getElementById('subDocModal').style.display = 'block'
			var parentDiv = buttonElement.closest('.input-group.mb-3');
			const inputElement = parentDiv.querySelector('input.form-control');
			document.getElementById("fieldName").value = inputElement.value;
		}
		function closeSubDocModal() {
			document.getElementById('subDocModal').style.display = 'none'
		}

		function linkSubDocument() {
			const modelId = document.getElementById("modelId").value;
			const fieldName = document.getElementById("fieldName").value;
			const linkingModelId = document.getElementById("linkingModelId").value;

			fetch("/api/v1/manage/link-model-repeater", {
				method:"POST",
				headers:{
					"Content-Type":"application/json"
				},
				body:JSON.stringify({modelId, fieldName, linkingModelId})
			})
			.then(res => res.json())
			.then(data => {console.log(data); closeSubDocModal();} )
		}

		function handleRepeater(selectElement) {
			var buttonElement = selectElement.nextElementSibling;
			if(selectElement.value === "Repeater"){
				buttonElement.style.display='inline-block';
			} else {
				buttonElement.style.display='none';
			}
		}

		function handlePostTypeConfirmation() {
			
			const element = document.getElementById("post-type-selector");
			if(element.value == ""){
				document.getElementById('post-type-link-confirmation').style.display = "none";
				return;
			}
			const postTypeId = element.value?.split("--")[0];
			const postTypeName = element.value?.split("--")[1];
			const input1 = document.getElementById("linkPostTypeName");
			const input2 = document.getElementById("linkPostTypeId");
			const p = document.getElementById("post-type-confirm-name");
			input1.value = postTypeName;
			input2.value = postTypeId;
			p.textContent = postTypeName;
			document.getElementById('post-type-link-confirmation').style.display = "flex"
		}

		function addfield() {
			// const empty = document.getElementById("empty-model-wr").style.display = "none";
			const inputsContainer = document.getElementById("inputs-container");
			const newdiv = document.createElement('div');
			newdiv.innerHTML = `<div class="input-group mb-3" font-size: 13px;">
				<span style="background-color: #d5d5d5;font-weight: 500;border-radius: 0px;font-size:13px;" class="input-group-text">Key Name</span>
				<input type="text" style="font-size:13px;" class="form-control" placeholder="Enter a key" aria-label="Enter a key" required>
				<span style="background-color: #d5d5d5;font-weight: 500;border-radius: 0px;font-size:13px;" class="input-group-text">Data Type</span>
				<select class="form-select" onchange="handleRepeater(this)" style="font-size:13px;" aria-label="Default select example" required>
					<option selected value="String">String</option>
					<option value="Boolean">Boolean</option>
					<option value="Number">Number</option>
					<option value="Image">Image</option>
					<option value="Multiple Images">Multiple Images</option>
					<option value="Mixed">Mixed</option>
					<option value="Array">Array</option>
					<option value="Repeater">Repeater</option>
				</select>
				<button style="display: none;" onclick="openSubDocModal(this)" class="btn button-secondary" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Link a custom field"><i class="fa-solid fa-link"></i></button>
			</div>`;
			inputsContainer.appendChild(newdiv);
			window.scroll({
				top: document.body.scrollHeight,
				behavior: 'smooth'
			});
		}

		function unlinkPostType(postTypeName, postTypeId) {
			
			const modelId = document.getElementById("linkModelId").value;
			fetch("/api/v1/manage/unlink-post-type", {
				method:"POST",
				headers:{
					"Content-Type":"application/json"
				},
				body:JSON.stringify({postTypeId, postTypeName, modelId})
			}).then(res => res.json).then(data => window.location.reload())
		}

		function handleJsonParsing(val) {
			try {
				console.log('parsing val', val, typeof(val))
				return JSON.parse(val)
			} catch (error) {
				return val;
			}
		}

		function handlesubmit() {
			let data = {};
			const inputContainer = document.getElementById("inputs-container");
			const modelName = inputContainer.querySelector("input[name='modelName']").value;
			const allInputs = inputContainer.querySelectorAll('input:not([name="modelName"])');
			allInputs.forEach(input => {
				const parent = input.closest(".input-group");
				const selectItem = parent.querySelector(".form-select");
				const inputValue = input.value;
				const selectValue = handleJsonParsing(selectItem.value);
				if(typeof(selectValue) === 'string'){
					data[inputValue?.split(" ").join("")] = selectValue;
				} else {
					data[inputValue?.split(" ").join("")] = selectValue;
				}
			})

			fetch("/api/v1/manage/add-model-data", {
				method:"POST",
				headers:{
					"Content-Type":"application/json"
				},
				body:JSON.stringify({ modelName,modelData:data})
			}).then(res => res.json()).then(data => window.location.reload())
		}
	</script>
</div>